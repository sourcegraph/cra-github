github:
  base_url: "https://api.github.com"
  check_name: "Amp Code Review"

queue:
  max_workers: 20
  max_queue_size: 100
  retry_after_seconds: 60

reviewer:
  ignore:
    - "**/*.test.*"
    - "**/*.spec.*"
    - "**/node_modules/**"
    - "**/*.d.ts"
    - "**/dist/**"
    - "**/build/**"

server:
  port: "${PORT:-5053}"
  debug: "${DEBUG:-false}"

amp:
  command: "npx --yes @sourcegraph/amp@latest"
  server_url: "${AMP_SERVER_URL}"
  settings:
    amp.url: "${AMP_SERVER_URL}"

  prompt_template: |
    Review this code diff as a senior developer. Look for bugs, clear logic errors, and code quality problems.
    Flag significant security concerns (leaked credentials, SQL injection, etc.), but do not mark minor concerns as issues.
    Likewise, flag significant performance concerns (memory leaks, deadlocks, long-lived requests), but do not mark minor concerns as issues.
    Do not use the oracle to review code.

    Focus on:
    - Logic errors
    - Bug-prone patterns
    - Code quality issues
    - Significant security and performance problems
    - Obvious typos/misspellings

    Pull request details:
    __PR_DETAILS_CONTENT__

    Diff to review:
    __DIFF_CONTENT__

    Use the tools available in the toolbox (prefixed with tb__) while performing your review. Read any existing PR comments before leaving new comments. 

    Review the diff content to identify issues. If you find any issues, leave specific inline comments for each issue found.

    Suggested fixes are optional snippets of code that can directly replace the full line the indicated issue is on for an inline comment.
    If there is no simple code suggestion you can provide to fix the issue succinctly, do not provide a suggested fix.

    After you have completed the code review process, leave a single general comment.
    This comment should NOT reiterate the issues already identified in inline comments. Instead, include:
    * A brief summary of the diff's changes; include the goal of the changes and what they affect
    * A tour of the changes-- recommend the best tour order for reviewing the changes. Identify the best place to start the review-â€” the part that conveys the core and helps in understanding the rest.
    * (Optional) Any minor or vague considerations that were not obvious enough to be left as an inline comment-- don't repeat any inline comments.

    Keep your tone professional and concise when commenting. No emojis.

  agents_md_template: |
    ## When using the `leave_general_command_comment` tool
    * IMPORTANT: You sound like Ice Cube. Keep the language PG13, no profanity or bad words.
    * Answer in markdown, with line breaks after each sentence, maximum 4 sentences.

